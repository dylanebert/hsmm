
CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
If your shell is Bash or a Bourne variant, enable conda for the current user with

    $ echo ". /gpfs/runtime/opt/anaconda/3-5.2.0/etc/profile.d/conda.sh" >> ~/.bashrc

or, for all users, enable conda with

    $ sudo ln -s /gpfs/runtime/opt/anaconda/3-5.2.0/etc/profile.d/conda.sh /etc/profile.d/conda.sh

The options above will permanently enable the 'conda' command, but they do NOT
put conda's base (root) environment on PATH.  To do so, run

    $ conda activate

in your terminal, or to put the base environment on PATH permanently, run

    $ echo "conda activate" >> ~/.bashrc

Previous to conda 4.4, the recommended way to activate conda was to modify PATH in
your ~/.bashrc file.  You should manually remove the line that looks like

    export PATH="/gpfs/runtime/opt/anaconda/3-5.2.0/bin:$PATH"

^^^ The above line should NO LONGER be in your ~/.bashrc file! ^^^


2021-03-17 23:50:02.605773: W tensorflow/stream_executor/platform/default/dso_loader.cc:59] Could not load dynamic library 'libcudart.so.10.1'; dlerror: libcudart.so.10.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/python/2.7.12/lib:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2021-03-17 23:50:02.605826: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
Traceback (most recent call last):
  File "controller.py", line 89, in <module>
    hsmm_wrapper = HSMMWrapper(args, device=cmd_args.device)
  File "/gpfs/data/epavlick/debert/hsmm/hsmm_wrapper.py", line 73, in __init__
    self.get_hsmm()
  File "/gpfs/data/epavlick/debert/hsmm/hsmm_wrapper.py", line 79, in get_hsmm
    self.train()
  File "/gpfs/data/epavlick/debert/hsmm/hsmm_wrapper.py", line 187, in train
    self.train_unsupervised()
  File "/gpfs/data/epavlick/debert/hsmm/hsmm_wrapper.py", line 235, in train_unsupervised
    loss = self.model.log_likelihood(features, lengths, None)
  File "/gpfs/data/epavlick/debert/hsmm/hsmm.py", line 328, in log_likelihood
    log_likelihood = dist.partition.mean()
  File "/users/debert/.local/lib/python3.6/site-packages/torch/distributions/utils.py", line 103, in __get__
    value = self.wrapped(instance)
  File "/users/debert/.local/lib/python3.6/site-packages/torch_struct/distributions.py", line 205, in partition
    return self._struct(LogSemiring).sum(self.log_potentials, self.lengths)
  File "/users/debert/.local/lib/python3.6/site-packages/torch_struct/helpers.py", line 78, in sum
    v = self.logpartition(logpotentials, lengths)[0]
  File "/users/debert/.local/lib/python3.6/site-packages/torch_struct/semimarkov.py", line 37, in logpartition
    semiring.one_(init.data[:, :, :, 0, 0].diagonal(0, -2, -1))
IndexError: index 0 is out of bounds for dimension 3 with size 0
